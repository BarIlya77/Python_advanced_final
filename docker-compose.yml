services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - twitter
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  app:
    container_name: fast_api
    build: .
    env_file: .env
    environment:
      DB_URL: "postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}"
    volumes:
      - ./static:/app/static
      - ./.env:/app/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - twitter

  nginx:
    container_name: nginx
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      app:
        condition: service_started
        restart: true
    networks:
      - twitter

volumes:
  postgres_data:

networks:
  twitter:
    driver: bridge
